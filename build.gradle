plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            // args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}
sourceSets.main.resources { srcDir 'src/generated/resources' }
repositories {
    maven {
        name "JEI"
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        name "ModMaven"
        url "https://modmaven.dev"
    }
    maven {
        url "https://cursemaven.com"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation fg.deobf("curse.maven:lendercataclysm-551586:6729683")
    implementation fg.deobf("curse.maven:curios-309927:6418456")
    implementation fg.deobf("curse.maven:mmmmmmmmmmmm-225738:6608233")
    implementation fg.deobf("curse.maven:codechicken-lib-1-8-242818:5753868")
    implementation fg.deobf("curse.maven:re-avaritia-623969:6418092")
    implementation fg.deobf("curse.maven:ticex-tinkers-construct-ex-1242469:6697907")
    implementation fg.deobf("curse.maven:tinkers-construct-74072:6635554")
    implementation fg.deobf("curse.maven:mantle-74924:6642332")
    implementation fg.deobf("curse.maven:moffs-addonapi-dynload-1242459:6420515")
    implementation fg.deobf("curse.maven:draconic-evolution-223565:6065044")
    implementation fg.deobf("curse.maven:mekanism-268560:6552911")
    implementation fg.deobf("curse.maven:brandons-core-231382:5422013")
    implementation fg.deobf("curse.maven:selene-499980:6693288")
    implementation fg.deobf("curse.maven:mob-battle-mod-268746:6588027")
    implementation fg.deobf("curse.maven:lionfish-api-1001614:5922047")
    implementation fg.deobf("curse.maven:attributefix-280510:4911084")
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")
    runtimeOnly fg.deobf("curse.maven:jade-324717:5672013")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
